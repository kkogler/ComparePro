I'll provide you with step-by-step instructions to set up a DigitalOcean VPS with a reverse proxy to give your Replit app a fixed IP address.
DigitalOcean Setup Instructions
Step 1: Create DigitalOcean Droplet
1.	Sign up/Login to DigitalOcean
2.	Create a new Droplet:
•	Choose Ubuntu 22.04 LTS (most stable)
•	Select Basic plan: $4/month (1GB RAM, 1 vCPU, 25GB SSD)
•	Choose a datacenter region close to your users
•	Authentication: Add your SSH key (recommended) or use password
•	Hostname: Something like pricecompare-proxy
•	Click Create Droplet
3.	Note the IP address - this will be your fixed IP
Step 2: Initial Server Setup
SSH into your droplet:
ssh root@YOUR_DROPLET_IP
Update the system:
apt update && apt upgrade -y
Install nginx and other essentials:
apt install nginx certbot python3-certbot-nginx ufw -y
Step 3: Configure Firewall
# Allow SSH, HTTP, and HTTPS
ufw allow OpenSSH
ufw allow 'Nginx Full'
ufw enable
Step 4: Configure Nginx Reverse Proxy
Create nginx configuration:
nano /etc/nginx/sites-available/pricecompare
Add this configuration (replace your-replit-app.replit.dev with your actual Replit URL):
server {
    listen 80;
    server_name YOUR_DOMAIN_OR_IP;
    
    # Forward real IP addresses
    location / {
        proxy_pass https://your-replit-app.replit.dev;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Handle websockets if needed
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Increase timeout for API calls
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
}
Enable the configuration:
# Remove default site
rm /etc/nginx/sites-enabled/default
# Enable your site
ln -s /etc/nginx/sites-available/pricecompare /etc/nginx/sites-enabled/
# Test configuration
nginx -t
# Restart nginx
systemctl restart nginx
systemctl enable nginx
Step 5: Set Up SSL Certificate (Optional but Recommended)
If you have a domain name:
# Replace with your actual domain
certbot --nginx -d yourdomain.com
If using IP only, you can skip SSL or set up a self-signed certificate.
Step 6: Configure Your Application
Update your Replit app to handle the proxy headers. Add this to your Express server setup:
// Trust proxy headers (add this near the top of your server setup)
app.set('trust proxy', 1);
Step 7: Test the Setup
1.	Visit http://YOUR_DROPLET_IP - you should see your Replit app
2.	Check that all functionality works through the proxy
3.	Verify that vendor API calls work with the new fixed IP
Step 8: Update Vendor API Configurations
Now you can whitelist your DigitalOcean droplet's IP address with:
•	Lipsey's API (for IP whitelisting)
•	Any other vendors that require fixed IP addresses
Monthly Costs:
•	DigitalOcean Basic Droplet: $4/month
•	Bandwidth: Generous free allowance (1TB outbound)
•	Total: ~$4-6/month
Maintenance:
# Monthly security updates
apt update && apt upgrade -y
# Check nginx status
systemctl status nginx
# View nginx logs if needed
tail -f /var/log/nginx/access.log
tail -f /var/log/nginx/error.log
Benefits for Your App:
1.	Fixed IP: Never changes, perfect for vendor API whitelisting
2.	SSL Termination: Handle HTTPS at the proxy level
3.	Load Balancing: Can add multiple Replit instances later
4.	Caching: Can add caching rules for better performance
5.	Custom Headers: Full control over request/response headers
Would you like me to help you with any specific part of this setup, or do you need the configuration adjusted for your particular requirements?



1.	Update the system (apt update && apt upgrade -y)
2.	Install nginx (apt install nginx certbot python3-certbot-nginx ufw -y)
3.	Configure firewall (ufw commands)
4.	Set up nginx reverse proxy configuration
5.	Enable SSL if needed
Security Note
Since you're using password authentication, consider these optional security improvements after setup:
# Optional: Change SSH port (makes automated attacks less likely)
nano /etc/ssh/sshd_config
# Change "Port 22" to "Port 2222" (or any port you prefer)
# Then: systemctl restart ssh
# Optional: Disable root login after creating a regular user
# (You can do this later if you want extra security)
Quick Start
1.	Connect: ssh root@YOUR_DROPLET_IP (enter your password)
2.	Follow my original instructions starting from "Update the system"
The password method works perfectly fine for getting started. You can always add SSH keys later if you want more convenience and security.

